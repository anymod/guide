(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{284:function(t,e,a){"use strict";a.r(e);var s=a(0),n=Object(s.a)({},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("In this example, we'll use AnyMod's built in "),a("code",[t._v("buildImage")]),t._v(" method to always size an image to match the width of a visitor's browser window.  This means large screens will see a high-resolution image, while smaller screens will see a scaled-down version of the same image.")]),t._v(" "),a("p",[t._v("With this approach, we can have high-resolution when needed but also have fast page loads on mobile devices.")]),t._v(" "),a("h3",{attrs:{id:"_1-add-an-image-to-your-mod"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-add-an-image-to-your-mod","aria-hidden":"true"}},[t._v("#")]),t._v(" 1. Add an image to your mod")]),t._v(" "),a("p",[t._v("Click "),a("strong",[t._v("Settings")]),t._v(" at the top of the page, then visit the "),a("strong",[t._v("Fields")]),t._v(" tab.")]),t._v(" "),a("p",[t._v("Add a field called "),a("code",[t._v("myImage")]),t._v(" to your mod with type "),a("strong",[t._v("Image")]),t._v(":")]),t._v(" "),a("img",{attrs:{src:"https://res.cloudinary.com/component/image/upload/c_scale,w_1200/v1534900634/image-manipulation-01_agnlns.png"}}),t._v(" "),a("p",[t._v("Now click on the "),a("code",[t._v("myImage")]),t._v(" link and upload an image:")]),t._v(" "),a("img",{attrs:{src:"https://res.cloudinary.com/component/image/upload/c_scale,w_1200/v1534902407/right-size-02_bsc6ez.png"}}),t._v(" "),a("h3",{attrs:{id:"_2-scaling-the-image-based-on-screen-size"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-scaling-the-image-based-on-screen-size","aria-hidden":"true"}},[t._v("#")]),t._v(" 2. Scaling the image based on screen size")]),t._v(" "),a("p",[t._v("First, let's add a rule to the mod's CSS panel so that our image will never exceed the width of the screen:")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("img")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("max-width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("div",{staticClass:"tip custom-block"},[a("p",[t._v("Any rules defined in the mod's CSS panel will apply only to the mod and not to other elements on a web page. In this case, the only "),a("code",[t._v("img")]),t._v(" element affected will be the one in this mod.")])]),t._v(" "),a("p",[t._v("Next, in the mod's JS panel, add the code below, which does the following:")]),t._v(" "),a("ul",[a("li",[t._v("Line 1: Use the built in "),a("code",[t._v("Anymod.buildImage")]),t._v(" method ("),a("router-link",{attrs:{to:"/guide/global-methods.html#anymod-buildimage"}},[t._v("docs")]),t._v(") to manipulate the image, which is available as "),a("code",[t._v("mod.data.myImage")])],1),t._v(" "),a("li",[t._v("Line 2: Set the width of the image to "),a("code",[t._v("window.innerWidth - (window.innerWidth % 100) + 100")]),t._v(", which is always just a little bit wider than the current window size")]),t._v(" "),a("li",[t._v("Lines 6-8: Insert the image into the mod")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" resizedImage "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Anymod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("buildImage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("myImage"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n  w"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("innerWidth "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("innerWidth "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n  c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'limit'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" img "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'img'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nimg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setAttribute")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'src'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" resizedImage"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nmod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("el"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("appendChild")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("img"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"_3-result"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-result","aria-hidden":"true"}},[t._v("#")]),t._v(" 3. Result")]),t._v(" "),a("p",[t._v("The final result is an image that is a different size based on the width of the browser window.")]),t._v(" "),a("p",[t._v("If the window is 1200px wide, the image will be 1300px wide. If the window is 420px wide, the image will be 500px wide, and so on.")]),t._v(" "),a("img",{attrs:{src:"https://res.cloudinary.com/component/image/upload/c_scale,w_1200/v1534905485/right-size-03_ilqabw.png"}})])},[],!1,null,null,null);e.default=n.exports}}]);